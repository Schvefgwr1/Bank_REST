networks:
  application-network:
    driver: bridge

volumes:
  postgres_data:

services:

  postgres:
    image: postgres:16-alpine
    container_name: application-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:${POSTGRES_PORT:-5432}"
    networks:
      - application-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5

  bank-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bank-service
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - DB_PORT=${POSTGRES_PORT}
      - APP_PORT=${APP_PORT}
      - APP_NAME=bank-service
    ports:
      - "${APP_PORT}:${APP_PORT}"
    networks:
      - application-network
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${APP_PORT}/health" ]
      interval: 30s
      timeout: 10s
      retries: 5